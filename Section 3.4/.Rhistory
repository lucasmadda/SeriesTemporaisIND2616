us_retail_employment$Y_m_T <- us_retail_employment$Employed - us_retail_employment$`2x12-MA`
us_retail_employment$m <- as.integer(month(us_retail_employment$Month))
m_mean <- us_retail_employment[c('m','detrended')] %>%
group_by(m) %>%
summarise(mmean = mean(detrended, na.rm = TRUE))
us_retail_employment <- left_join(us_retail_employment,m_mean, by = 'm')
us_retail_employment$seasonal <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$seasonal
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$seasonal <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$random
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$seasonal <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$random
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$seasonal <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
random
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
# lendo a biblioteca
library(fpp3)
# Importando a série e plotando
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
# Plotando autocorrelação da série
us_retail_employment %>%
ACF(Employed, lag_max = 48) %>%
autoplot() +
labs(title="Australian antidiabetic drug sales - FAC")
# Média móvel 1 de 12 meses
us_retail_employment <- us_retail_employment %>%
mutate(
`12-MA`= slider::slide_dbl(Employed, mean,
.before = 6, .after = 5, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
autoplot(us_retail_employment, `2x12-MA`) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail 2x12-MA")
us_retail_employment['detrended'] <- us_retail_employment['Employed'] - us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail No Trend"
)
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
us_retail_employment <- left_join(us_retail_employment,m_mean, by = 'm')
m_mean <- us_retail_employment[c('m','detrended')] %>%
group_by(m) %>%
summarise(mmean = mean(detrended, na.rm = TRUE))
us_retail_employment$m <- as.integer(month(us_retail_employment$Month))
m_mean <- us_retail_employment[c('m','detrended')] %>%
group_by(m) %>%
summarise(mmean = mean(detrended, na.rm = TRUE))
us_retail_employment <- left_join(us_retail_employment,m_mean, by = 'm')
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
# lendo a biblioteca
library(fpp3)
# Importando a série e plotando
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
# Plotando autocorrelação da série
us_retail_employment %>%
ACF(Employed, lag_max = 48) %>%
autoplot() +
labs(title="Australian antidiabetic drug sales - FAC")
# Média móvel 1 de 12 meses
us_retail_employment <- us_retail_employment %>%
mutate(
`12-MA`= slider::slide_dbl(Employed, mean,
.before = 6, .after = 5, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
autoplot(us_retail_employment, `2x12-MA`) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail 2x12-MA")
us_retail_employment['detrended'] <- us_retail_employment['Employed'] - us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail No Trend"
)
us_retail_employment$Y_m_T <- us_retail_employment$Employed - us_retail_employment$`2x12-MA`
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail No Trend"
)
us_retail_employment$m <- as.integer(month(us_retail_employment$Month))
m_mean <- us_retail_employment[c('m','detrended')] %>%
group_by(m) %>%
summarise(mmean = mean(detrended, na.rm = TRUE))
us_retail_employment <- left_join(us_retail_employment,m_mean, by = 'm')
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$seasonal <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$random
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
us_retail_employment$seasonal <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$random
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail Componentes Sazonais"
)
us_retail_employment$random <- us_retail_employment$Employed - us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
us_retail_employment$random <- us_retail_employment$Y_m_T - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
us_retail_employment$random <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$mmean
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
us_retail_employment$seasonal <- us_retail_employment$mmean
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$seasonal
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
text(x = mean(x) * 1.7,                   # Add text for mean
y = mean(x) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
text(x = mean(us_retail_employment$random) * 1.7,                   # Add text for mean
y = mean(us_retail_employment$random) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
hist(us_retail_employment$random)                                   # Draw histogram
abline(v = mean(us_retail_employment$random),                       # Add line for mean
col = "red",
lwd = 3)
text(x = mean(us_retail_employment$random) * 1.7,                   # Add text for mean
y = mean(us_retail_employment$random) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
abline(v = mean(us_retail_employment$random),                       # Add line for mean
col = "red",
lwd = 3) +
text(x = mean(us_retail_employment$random) * 1.7,                   # Add text for mean
y = mean(us_retail_employment$random) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
hist(us_retail_employment$random) +                                 # Draw histogram
abline(v = mean(us_retail_employment$random),                       # Add line for mean
col = "red",
lwd = 3) +
text(x = mean(us_retail_employment$random) * 1.7,                   # Add text for mean
y = mean(us_retail_employment$random) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
hist(us_retail_employment$random) +
abline(v = mean(us_retail_employment$random),
lwd = 3) +
text(x = mean(us_retail_employment$random) * 1.7,
y = mean(us_retail_employment$random) * 1.7,
paste("Mean =", mean(us_retail_employment$random)),
col = "red",
cex = 2)
hist(us_retail_employment)
abline(v = mean(us_retail_employment$random), col = 'blue')
hist(us_retail_employment$random)
hist(us_retail_employment$random) +
abline(v = mean(us_retail_employment$random), col = 'blue')
abline(v = mean(us_retail_employment$random), col = 'blue')
us_retail_employment$random
c(us_retail_employment$random)
ggplot(data)+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
data <- us_retail_employment$random
ggplot(data)+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
ggplot(us_retail_employment,aes(us_retail_employment$random))+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
ggplot(us_retail_employment,aes(us_retail_employment$random))+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
ggplot(us_retail_employment,aes(random))+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
ggplot(us_retail_employment,aes(random,na.rm=TRUE))+geom_histogram(bins=20)+geom_vline(aes(xintercept=mean(x),size=1))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random),size=1))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random),size=1,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(us_retail_employment$random),size=1,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(us_retail_employment$random),aes(xintercept = value,
linetype = whichstat,
col = whichstat),size=1))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random),aes(xintercept = value,
linetype = whichstat,
col = whichstat),size=1))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),size=1,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),size=0.2,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),size=0.05,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),size=5,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),size=0,color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),color='red'))
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),color='red'))+
labs(title = "Random Component Values Distribution")
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment['m_detrended'] <- us_retail_employment['Employed'] / us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, m_detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(m_detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
autoplot(us_retail_employment, m_detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
source("~/Library/CloudStorage/OneDrive-Pessoal/Documentos/PUC 22.2/healthcare silvio/sepsis/SeriesTemporaisIND2616/Flipped Classroom Class - FPP3 - TS Decomposition and Features - Section 3.4/Script_Decomposicao_Lucas.R")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
# lendo a biblioteca
library(fpp3)
# Importando a série e plotando
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
# Plotando autocorrelação da série
us_retail_employment %>%
ACF(Employed, lag_max = 48) %>%
autoplot() +
labs(title="Australian antidiabetic drug sales - FAC")
# Média móvel 1 de 12 meses
us_retail_employment <- us_retail_employment %>%
mutate(
`12-MA`= slider::slide_dbl(Employed, mean,
.before = 6, .after = 5, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
autoplot(us_retail_employment, `2x12-MA`) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail 2x12-MA")
us_retail_employment['detrended'] <- us_retail_employment['Employed'] - us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
# Importando a série e plotando
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
# Plotando autocorrelação da série
us_retail_employment %>%
ACF(Employed, lag_max = 48) %>%
autoplot() +
labs(title="Australian antidiabetic drug sales - FAC")
# Média móvel 1 de 12 meses
us_retail_employment <- us_retail_employment %>%
mutate(
`12-MA`= slider::slide_dbl(Employed, mean,
.before = 6, .after = 5, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
autoplot(us_retail_employment, `2x12-MA`) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail 2x12-MA")
us_retail_employment['detrended'] <- us_retail_employment['Employed'] - us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail Componentes"
)
us_retail_employment %>%
gg_subseries(Y_m_T) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail Componentes"
)
us_retail_employment %>%
gg_subseries(detrended) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail Componentes"
)
us_retail_employment$seasonal <- us_retail_employment$mmean
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
# Importando a série e plotando
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail")
# Plotando autocorrelação da série
us_retail_employment %>%
ACF(Employed, lag_max = 48) %>%
autoplot() +
labs(title="Australian antidiabetic drug sales - FAC")
# Média móvel 1 de 12 meses
us_retail_employment <- us_retail_employment %>%
mutate(
`12-MA`= slider::slide_dbl(Employed, mean,
.before = 6, .after = 5, .complete = TRUE),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE)
)
autoplot(us_retail_employment, `2x12-MA`) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail 2x12-MA")
us_retail_employment['detrended'] <- us_retail_employment['Employed'] - us_retail_employment["2x12-MA"]
autoplot(us_retail_employment, detrended) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail detrended")
us_retail_employment %>%
gg_season(detrended, labels = "both") +
labs(y = "Persons (Thousands)",
title = "Seasonal plot: Total employment in US retail detrended")
us_retail_employment$Y_m_T <- us_retail_employment$Employed - us_retail_employment$`2x12-MA`
us_retail_employment %>%
gg_subseries(detrended) +
labs(
y = "Persons - Thousands",
title = "Total employment in US retail Componentes"
)
us_retail_employment$m <- as.integer(month(us_retail_employment$Month))
m_mean <- us_retail_employment[c('m','detrended')] %>%
group_by(m) %>%
summarise(mmean = mean(detrended, na.rm = TRUE))
us_retail_employment <- left_join(us_retail_employment,m_mean, by = 'm')
us_retail_employment$seasonal <- us_retail_employment$mmean
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment$random <- us_retail_employment$Employed - us_retail_employment$`2x12-MA` - us_retail_employment$seasonal
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
ggplot(us_retail_employment,aes(random,na.rm=TRUE)) +
geom_histogram(bins=20) +
geom_vline(aes(xintercept=mean(random, na.rm = TRUE),color='red'))+
labs(title = "Random Component Values Distribution")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
autoplot(us_retail_employment, random) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Random Component")
autoplot(us_retail_employment, seasonal) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail - Seasonal Component")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
source("~/Library/CloudStorage/OneDrive-Pessoal/Documentos/PUC 22.2/healthcare silvio/sepsis/SeriesTemporaisIND2616/Flipped Classroom Class - FPP3 - TS Decomposition and Features - Section 3.4/Script_Decomposicao_Lucas.R")
